steps:
  # 16-run-pytest-on-build
  # install pipenv
  # use pipenv to install dev dependencies
  # run the tests
  - name: 'python'
    entrypoint: 'python'
    args: ['-m', 'pip', 'install', '--upgrade', 'pip']
  - name: python
    entrypoint: python
    args: ['-m', 'pip', 'install', 'build', 'pipenv', '--user'
    '&&', 'pipenv', 'sync', '--dev',
    '&&', 'pipenv', 'run', 'pytest'
    ]
  # - name: 'python'
  #   entrypoint: 'python'
  #   args: ['-m', 'pipenv', 'sync', '--dev']
  # - name: 'python'
  #   entrypoint: 'python'
  #   args: ['-m', 'pipenv', 'run', 'pytest']
    # '&&', 'pipenv', 'install', '--dev',
    # '&&', 'pipenv', 'run', 'pytest']
  # - name: 'python'
  #   entrypoint: 'python'
  #   args: ['-m', 'pytest', '--junitxml=${SHORT_SHA}_test_log.xml']
    # 'pipenv', 'install', 'pytest', '&&',
    # 'pipenv', 'install', 'pytest-vcr', '&&',
    # 'pipenv', 'install', 'black', '&&',
    # 'pipenv', 'install', 'pytest-cov', '&&',
    # 'pipenv', 'install', 'ruff', '&&',
    # 'pipenv', 'install', 'pytz', '&&',
    # 'pipenv', 'install', 'docker', '&&',
    # 'pipenv', 'install', 'requests', '&&',
    # 'pipenv', 'install', 'isort', '&&',

  # "kaniko" is a build runner whose sole job is to build
  # container images optimised for use on k8s.
  # destination is just where on our infrastructure we store
  # these images.
  # by default it looks for Dockerfile in the repo root and builds
  # that though other locations can be specified.
  # For why we build the image twice with different tags, see
  # the cicd README.
  - name: 'gcr.io/kaniko-project/executor:latest'
    args:
      - >-
        --destination=${_IMAGE_REPOSITORY}/idpd-api-poc:latest
      - >-
        --destination=${_IMAGE_REPOSITORY}/idpd-api-poc:$SHORT_SHA

  # This uses the kubectl runner (a container designed to interact
  # with k8s via kubectl) to update the image defined in the k8s deployment
  # on the cluster in question - k8s will notice this and green/blue 
  # bounce the pod(s) from there.
  - name: gcr.io/cloud-builders/kubectl
    env:
      - CLOUDSDK_COMPUTE_REGION=${_REGION}
      - CLOUDSDK_CONTAINER_CLUSTER=${_K8S_CLUSTER_NAME}
    args:
      - set
      - image
      - deployment/idpd-api-poc
      - '--namespace=cms'
      - >-
        idpd-api-poc=${_IMAGE_REPOSITORY}/idpd-api-poc:$SHORT_SHA
timeout: 600s